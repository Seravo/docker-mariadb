---
name: Build and deploy images
on:
  schedule:
    # rebuild every 2nd day of the month at 19:24 UTC
    - cron: '24 19 2 * *'
  push:
    branches:
      - main
      - feature/**
      - bugfix/**
      - 10.**
  pull_request:
    branches:
      - '*'

permissions:
  contents: read
  packages: write
  actions: read

jobs:
  build-image:
    name: Build image
    runs-on: ubuntu-latest
    env:
      image: ghcr.io/seravo/mariadb
    steps:
      - id: refname
        name: Convert git refname to valid Docker tag
        run: echo "::set-output name=refname::$(echo "${{ github.ref_name }}" |sed 's/\//-/g')"

      - id: clone-repository
        uses: actions/checkout@v2
        name: Clone git repository

      - id: docker-login
        uses: Seravo/actions/docker-login@v0.21
        name: Login to ghcr.io

      # To speed up builds, try to use previously built image as cache source.
      # However, skip this if we're running weekly scheduled build to ensure
      # that we get latest APT versions at least once a week
      - if: ${{ github.event_name != 'schedule' }}
        name: Pull previously built image
        id: docker-pull
        uses: Seravo/actions/docker-pull-previous@v0.21
        with:
          image: "${{ env.image }}"

      - id: docker-build
        uses: Seravo/actions/docker-build@v0.21
        name: Build image
        with:
          image: "${{ env.image }}"

      - if: ${{ github.ref == 'refs/heads/main' }}
        name: Push new image to production
        id: docker-push-master
        uses: Seravo/actions/docker-push@v0.21
        with:
          image: "${{ env.image }}"

      - id: docker-tag-push-commit
        name: Tag image with commit id
        uses: Seravo/actions/docker-tag-and-push@v0.21
        with:
          source: "${{ env.image }}"
          target: "${{ env.image }}:${{ github.sha }}"

      - id: docker-tag-push-refname
        name: Tag image with refname
        uses: Seravo/actions/docker-tag-and-push@v0.21
        with:
          source: "${{ env.image }}"
          target: "${{ env.image }}:${{ steps.refname.outputs.refname }}"
